name: Deploy Arctyk ITSM Docs

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install mkdocs mkdocs-material pyyaml
          sudo apt-get update && sudo apt-get install -y jq
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Extract version from mkdocs.yml
        id: extract_version
        run: |
          echo "Extracting version from mkdocs.yml..."
          VERSION=$(python -c "import yaml; print(yaml.safe_load(open('mkdocs.yml')).get('extra', {}).get('version', {}).get('number', 'unknown'))")
          echo "docs_version=$VERSION" >> $GITHUB_OUTPUT
          echo "Docs version: $VERSION"

      - name: Update version badge
        run: |
          VERSION=${{ steps.extract_version.outputs.docs_version }}
          COLOR="brightgreen"
          if [[ "$VERSION" == *alpha* ]]; then COLOR="orange"; fi
          if [[ "$VERSION" == *beta* ]]; then COLOR="yellow"; fi
          if [[ "$VERSION" == *rc* ]]; then COLOR="lightgrey"; fi
          BADGE_URL="https://img.shields.io/badge/docs-${VERSION// /%20}-${COLOR}"
          echo "Updating version badge for ${VERSION} (${COLOR})"
          sed -i "s|!\[Docs Version\](https://img.shields.io/badge/docs-.*)|![Docs Version](${BADGE_URL})|" README.md || true

      - name: Commit version badge update
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md
          git diff --quiet && echo "No badge change detected" || (git commit -m "docs: update version badge to ${{ steps.extract_version.outputs.docs_version }}" && git push origin main)

      - name: Inject build timestamp into mkdocs.yml
        id: timestamp
        run: |
          BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          echo "Build date: $BUILD_DATE"
          echo "extra:
            build_date: "$BUILD_DATE"" >> extra_timestamp.yml
          yq eval-all 'select(fileIndex == 0) * select(fileIndex == 1)' mkdocs.yml extra_timestamp.yml > mkdocs_temp.yml
          mv mkdocs_temp.yml mkdocs.yml

      - name: Ensure gh-pages branch exists
        run: |
          if ! git ls-remote --exit-code origin gh-pages; then
            echo "No gh-pages branch found â€” creating one..."
            mkdocs gh-deploy --force
            echo "gh-pages branch created successfully."
          else
            echo "gh-pages branch already exists, proceeding with normal deploy."
          fi

      - name: Build and deploy documentation
        run: mkdocs gh-deploy --force
